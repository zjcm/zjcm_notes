169. 多数元素
给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。

你可以假设数组是非空的，并且给定的数组总是存在多数元素。

 

示例 1：

输入：[3,2,3]
输出：3
示例 2：

输入：[2,2,1,1,1,2,2]
输出：2
 

进阶：

尝试设计时间复杂度为 O(n)、空间复杂度为 O(1) 的算法解决此问题。

#### 思路：最简单直观的方法肯定是哈希，这样时间空间复杂度都是O(n)
#### 这里我直接使用摩尔投票法，它在众数占据数组三分之一以上的数字时可以用O(1)的复杂度就可以检测出是否为众数
#### 关于摩尔投票法的正确性可以搜知乎，这里不再详述

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        
        count ,candidate = 0, 0

        for i in nums:
            if count == 0:
                candidate = i
            if candidate == i:
                count += 1
            else:
                count -= 1

        return candidate