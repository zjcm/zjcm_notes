128. 最长连续序列
给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。

请你设计并实现时间复杂度为 O(n) 的算法解决此问题。

 

示例 1：

输入：nums = [100,4,200,1,3,2]
输出：4
解释：最长数字连续序列是 [1, 2, 3, 4]。它的长度为 4。
示例 2：

输入：nums = [0,3,7,2,5,8,4,6,0,1]
输出：9

#### 思路：首先用集合(哈希表)存起来
#### 然后遍历，只有当数值上恰好小1的值不在集合中时，也就是一定是序列的起点时才计算序列长度，这样复杂度只要O(n)
#### 题外话，其实我一直想知道python从集合取一个元素怎么写，可以for但是不能直接取元素吗？

class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        d = set(nums)
        ans = 0
        for i in d:
            if i - 1 not in d:
                c = 1
                k = i + 1
                while k in d:
                    c += 1
                    k += 1
                ans = max(ans,c)
        return ans