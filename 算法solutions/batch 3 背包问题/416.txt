416. 分割等和子集
给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。

 

示例 1：

输入：nums = [1,5,11,5]
输出：true
解释：数组可以分割成 [1, 5, 5] 和 [11] 。
示例 2：

输入：nums = [1,2,3,5]
输出：false
解释：数组不能分割成两个元素和相等的子集。

#### 经典 0-1 背包 老规矩二维dp

class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        s = sum(nums)
        if s % 2 == 1:
            return False
        t = s // 2
        l = len(nums)
        dp = [[0] * (t+1) for i in range(l+1)]
        # dp[x][y] 表示用前x个元素是否可以找到和为y的子集 
        # 0<=x<=l 0<=y<=t
        dp[0] = [1] + [0] * t
        for i in range(1,l+1):
            ele = nums[i-1]
            for j in range(t+1):
                if j - ele >= 0:
                    dp[i][j] = dp[i-1][j] | dp[i-1][j-ele]
                else:
                    dp[i][j] = dp[i-1][j]
        
        return bool(dp[-1][-1])
