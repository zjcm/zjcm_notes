给定一组非负整数 nums，重新排列每个数的顺序（每个数不可拆分）使之组成一个最大的整数。

注意：输出结果可能非常大，所以你需要返回一个字符串而不是整数。

 

示例 1：

输入：nums = [10,2]
输出："210"
示例 2：

输入：nums = [3,30,34,5,9]
输出："9534330"
示例 3：

输入：nums = [1]
输出："1"
示例 4：

输入：nums = [10]
输出："10"

# 思路，定义如果 a,b相连大于b,a相连，那么a大于b，在这种大于的意义下对数组进行排序
# 然后相连即可，这样是可以保证正确性的
# 自定义排序可以用sorted + key = functools.cmp_to_key 这个形式

class Solution:
    def largestNumber(self, nums: List[int]) -> str:
        def compare(x,y):
            if int(str(x)+str(y)) >= int(str(y)+str(x)):
                return -1
            else:
                return 1
        
        nums = sorted(nums, key = functools.cmp_to_key(compare))
        res = [str(x) for x in nums]
        d = []
        flag = 0
        for c in res:
            if c != "0" or flag:
                d.append(c)
                flag = 1
        
        if d == []:
            d = ["0"]

        return "".join(d)